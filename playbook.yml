---
- hosts: master
  remote_user: vagrant
  become: yes
  become_method: sudo
  vars:
    master_ip: master_ip
    agent_ips: agent_ips
  tasks:
      - debug: var=master_ip
      - debug: var=agent_ips
      - name: add mesos key
        apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=E56151BF
      - name: add mesos repo
        shell: echo "deb http://repos.mesosphere.com/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mesosphere.list
      - name: install mesos marathon pip
        apt: name=mesos,marathon,python-pip,python-dev update_cache=yes
      - name: configure zookeeper ID
        shell: echo "1" | sudo tee /etc/zookeeper/conf/myid
      - name: set zookeeper master
        replace: dest=/etc/mesos/zk regexp="localhost" replace="{{master_ip}}"
      - name: set explicit master ip
        shell: sh -c "echo {{master_ip}} > /etc/mesos-master/ip"
      - name: Force Mesos Master to be resolved by IP addresse instead of hostname
        lineinfile: dest=/etc/mesos-master/hostname_lookup create=yes line="false"
      - name: restart zookeeper
        service: name=zookeeper state=restarted enabled=yes
      - name: (re)start mesos-master
        service: name=mesos-master state=restarted enabled=yes
      - name: Stop mesos-slave
        service: name=mesos-slave state=stopped enabled=yes
      - name: (re)start marathon
        service: name=marathon state=stopped enabled=yes
      - name: Install Python Docker 
        pip:
          name: docker-py
      - name: Create Marathon-LB Container
        docker_container:
          name: mlb
          image: mesosphere/marathon-lb
          command: sse --group external --marathon http://{{master_ip}}:8080
          state: started
          privileged: yes
          restart_policy: always
          ports:
            - "80:80"
            - "443:443"
            - "9090:9090"
            - "10000:10000"
          env:
            PORTS: 9090
      - name: Run Mesos-DNS
        shell: marathon --master=zk://{{master_ip}}:2181/mesos &
      - name: Run Mesos-DNS
        shell: ./mesos-dns-v0.6.0-linux-amd64 &
        args:
          chdir: /home/vagrant/
- hosts: nodes
  remote_user: vagrant
  become: yes
  become_method: sudo
  tasks:
      - debug: var=master_ip
      - debug: var=agent_ips
      - name: add mesos key
        apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=E56151BF
      - name: add mesos repo
        shell: echo "deb http://repos.mesosphere.com/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mesosphere.list
      - name: install mesos pip
        apt: name=mesos,python-pip,python-dev update_cache=yes
      - name: configure containerizers
        lineinfile: dest=/etc/mesos-slave/containerizers create=yes line="docker,mesos"
      - name: lengthen registration timeout
        lineinfile: dest=/etc/mesos-slave/executor_registration_timeout create=yes line="5mins"
      - name: Force Mesos Slaves to be resolved by IP addresses instead of hostnames
        lineinfile: dest=/etc/mesos-slave/hostname_lookup create=yes line="false"
      - name: set zookeeper master
        replace: dest=/etc/mesos/zk regexp="localhost" replace="{{master_ip}}"
      - name: stop zookeeper
        service: name=zookeeper state=stopped
      - name: disable zookeeper
        shell: sh -c "echo manual > /etc/init/zookeeper.override"
      - name: stop mesos-master
        service: name=mesos-master state=stopped
      - name: disable mesos-master
        shell: sh -c "echo manual > /etc/init/mesos-master.override"
      - name: (re)start mesos-slave
        service: name=mesos-slave state=restarted enabled=yes